"""empty message

Revision ID: 41986eccd7ef
Revises: 11c4563928ef
Create Date: 2015-08-18 14:50:08.100977

"""

# revision identifiers, used by Alembic.
revision = '41986eccd7ef'
down_revision = '11c4563928ef'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], [u'permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], [u'role.id'], )
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], [u'role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], )
    )
    op.drop_table('account_access_token')
    op.drop_table('association')
    op.drop_table('dynamic_valid_code')
    op.drop_table('account')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('account_id_seq'::regclass)"), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('nickname', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_joined', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'account_pkey'),
    sa.UniqueConstraint('email', name=u'account_email_key'),
    sa.UniqueConstraint('mobile', name=u'account_mobile_key'),
    sa.UniqueConstraint('password', name=u'account_password_key'),
    sa.UniqueConstraint('username', name=u'account_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('dynamic_valid_code',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expired', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'dynamic_valid_code_pkey')
    )
    op.create_table('association',
    sa.Column('left_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('right_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['left_id'], [u'role.id'], name=u'association_left_id_fkey'),
    sa.ForeignKeyConstraint(['right_id'], [u'permission.id'], name=u'association_right_id_fkey')
    )
    op.create_table('account_access_token',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('last_ip', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('last_device', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('last_position_x', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_position_y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('date_expired', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], [u'account.id'], name=u'account_access_token_account_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'account_access_token_pkey')
    )
    op.drop_table('user_role')
    op.drop_table('role_permission')
    ### end Alembic commands ###
